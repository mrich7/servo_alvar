#! /usr/bin/python
import roslib
roslib.load_manifest('tf')
roslib.load_manifest('actionlib')
roslib.load_manifest('move_base')



import rospy
import actionlib
from actionlib_msgs.msg import *
from move_base_msgs.msg import *


from geometry_msgs.msg import PointStamped, Pose, Quaternion, PoseStamped
from std_msgs.msg import String, Bool
import tf





class spoof:
    
    def __init__(self):
        rospy.init_node('spoof_marker')
        self.broadcaster=tf.TransformBroadcaster()
        self.spoof()

    def spoof(self):
        rate=rospy.Rate(15)
        while not rospy.is_shutdown():
            #self.broadcaster.sendTransform((0.6557879542599779, 0.024584175222559287, 1.2336137059145866),(0.0, -1, 0.0, 1), rospy.Time.now(),"/ar_marker_1", "/base_link")     
            self.broadcaster.sendTransform((0.6557879542599779, 0.024584175222559287, 1.2336137059145866),( 0.38268343, -0.92387953,  0.38268343,  0.92387953), rospy.Time.now(),"/ar_marker_2", "/base_link")
           
            rate.sleep()
              


if __name__=='__main__':
    a=spoof()
    while not rospy.is_shutdown():
        rospy.spin()
